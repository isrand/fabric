apiVersion: v1
kind: ConfigMap
metadata:
  name: cli-peer-{{ .Values.organization.name }}-add-anchor-peer
data:
  anchor_peer: |+
    cd /tmp;
    peer channel fetch config config_block.pb -o orderer0:7050 -c test-channel --tls --cafile /crypto-material/orderer/tls/cert.pem;
    configtxlator proto_decode --input config_block.pb --type common.Block | jq .data.data[0].payload.data.config > config.json;
    jq '.channel_group.groups.Application.groups.{{ .Values.organization.mspID }}MSP.values += {"AnchorPeers":{"mod_policy": "Admins","value":{"anchor_peers": [{"host": "peer-{{ .Values.organization.name }}","port": 7051}]},"version":"0"}}' config.json > modified_anchor_config.json;
    configtxlator proto_encode --input config.json --type common.Config --output config.pb;
    configtxlator proto_encode --input modified_anchor_config.json --type common.Config --output modified_anchor_config.pb;
    configtxlator compute_update --channel_id test-channel --original config.pb --updated modified_anchor_config.pb --output anchor_update.pb;
    configtxlator proto_decode --input anchor_update.pb --type common.ConfigUpdate | jq . > anchor_update.json;
    echo '{"payload":{"header":{"channel_header":{"channel_id":"test-channel", "type":2}},"data":{"config_update":'$(cat anchor_update.json)'}}}' | jq . > anchor_update_in_envelope.json;
    configtxlator proto_encode --input anchor_update_in_envelope.json --type common.Envelope --output anchor_update_in_envelope.pb;
    peer channel update -f anchor_update_in_envelope.pb -c test-channel -o orderer0:7050 --tls --cafile /crypto-material/orderer/tls/cert.pem;